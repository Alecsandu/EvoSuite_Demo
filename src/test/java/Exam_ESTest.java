/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 27 17:55:05 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Exam_ESTest extends Exam_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Exam exam0 = new Exam();
      exam0.checkInputValues(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(50, false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(60, false);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(75, false);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(90, false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Exam exam0 = new Exam();
      // Undeclared exception!
      try { 
        exam0.checkInputValues(1899);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid points
         //
         verifyException("Exam", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Exam exam0 = new Exam();
      // Undeclared exception!
      try { 
        exam0.grade(738, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid points
         //
         verifyException("Exam", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Exam exam0 = new Exam();
      // Undeclared exception!
      try { 
        exam0.checkInputValues((-1776));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid points
         //
         verifyException("Exam", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(2, false);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(67, false);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(87, false);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(100, false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(2, true);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Exam exam0 = new Exam();
      int int0 = exam0.grade(57, false);
      assertEquals(4, int0);
  }
}
